local c = require('2049-neo.palette')

local hl = vim.api.nvim_set_hl
local theme = {}

theme.set_highlights = function()

  -- highlights
  hl(0, "Normal", { fg = c.fg2, bg = c.bg4, })
  hl(0, "SignColumn", { fg = 'NONE', bg = c.bg4, })
  hl(0, "MsgArea", { fg = c.fg2, bg = c.bg4, })
  hl(0, "ModeMsg", { fg = c.fg2, bg = c.dim1, })
  hl(0, "MsgSeparator", { fg = c.fg2, bg = c.bg4, })
  hl(0, "SpellBad", { fg = c.base5, bg = 'NONE', underline=true, })
  hl(0, "SpellCap", { fg = c.base3, bg = 'NONE', underline=true, })
  hl(0, "SpellLocal", { fg = c.base1, bg = 'NONE', underline=true, })
  hl(0, "SpellRare", { fg = c.dark1, bg = 'NONE', underline=true, })
  hl(0, "NormalNC", { fg = c.fg2, bg = c.bg4, })
  hl(0, "Pmenu", { fg = c.fade3, bg = c.dark4, blend = 50, })
  hl(0, "PmenuSel", { fg = 'NONE', bg = c.fade5, })
  hl(0, "WildMenu", { fg = c.fg2, bg = c.fade5, })
  hl(0, "CursorLineNr", { fg = c.dim3, bg = 'NONE', bold=true, })
  hl(0, "Comment", { fg = c.dark1, bg = 'NONE', italic=true, })
  hl(0, "Folded", { fg = c.fg3, bg = c.bg1, })
  hl(0, "FoldColumn", { fg = c.base2, bg = c.bg1, })
  hl(0, "LineNr", { fg = c.dark2, bg = 'NONE', })
  hl(0, "FloatBorder", { fg = c.dark2, bg = c.bg1, })
  hl(0, "bright2space", { fg = c.bg4, bg = 'NONE', })
  hl(0, "VertSplit", { fg = c.dark2, bg = c.bg4, })
  hl(0, "CursorLine", { fg = 'NONE', bg = c.dark4, })
  hl(0, "CursorColumn", { fg = 'NONE', bg = c.dark4, })
  hl(0, "ColorColumn", { fg = 'NONE', bg = c.dark4, })
  hl(0, "NormalFloat", { fg = 'NONE', bg = c.dark4, })
  hl(0, "Visual", { fg = 'NONE', bg = c.fade1, })
  hl(0, "VisualNOS", { fg = 'NONE', bg = c.bg1, })
  hl(0, "WarningMsg", { fg = c.base5, bg = c.bg4, })
  hl(0, "DiffAdd", { fg = c.bg1, bg = c.base1, })
  hl(0, "DiffChange", { fg = c.bg1, bg = c.fade3, underline=true, })
  hl(0, "DiffDelete", { fg = c.bg1, bg = c.base5, })
  hl(0, "QuickFixLine", { fg = 'NONE', bg = c.dark1, })
  hl(0, "PmenuSbar", { fg = 'NONE', bg = c.bg1, })
  hl(0, "PmenuThumb", { fg = 'NONE', bg = c.dark2, })
  hl(0, "MatchWord", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "MatchParen", { fg = c.fade1, bg = c.bg4, underline=true, })
  hl(0, "MatchWordCur", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "MatchParenCur", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "Cursor", { fg = c.dim3, bg = c.bright1, })
  hl(0, "lCursor", { fg = c.dim3, bg = c.bright1, })
  hl(0, "CursorIM", { fg = c.dim3, bg = c.bright1, })
  hl(0, "TermCursor", { fg = c.dim3, bg = c.bright1, })
  hl(0, "TermCursorNC", { fg = c.dim3, bg = c.bright1, })
  hl(0, "Conceal", { fg = c.base2, bg = 'NONE', })
  hl(0, "Directory", { fg = c.base2, bg = 'NONE', })
  hl(0, "SpecialKey", { fg = c.base2, bg = 'NONE', bold=true, })
  hl(0, "Title", { fg = c.base2, bg = 'NONE', bold=true, })
  hl(0, "ErrorMsg", { fg = c.base5, bg = c.bg4, bold=true, })
  hl(0, "Search", { fg = c.fade3, bg = c.search_base2, })
  hl(0, "IncSearch", { fg = c.fade4, bg = c.fade3, })
  hl(0, "Substitute", { fg = c.fade3, bg = c.fade4, })
  hl(0, "MoreMsg", { fg = c.base4, bg = 'NONE', })
  hl(0, "Question", { fg = c.base4, bg = 'NONE', })
  hl(0, "EndOfBuffer", { fg = c.bg4, bg = 'NONE', })
  hl(0, "NonText", { fg = c.bg4, bg = 'NONE', })
  hl(0, "Variable", { fg = c.fade5, bg = 'NONE', })
  hl(0, "String", { fg = c.base4, bg = 'NONE', })
  hl(0, "Character", { fg = c.base4, bg = 'NONE', })
  hl(0, "Constant", { fg = c.base4, bg = 'NONE', })
  hl(0, "Number", { fg = c.fade1, bg = 'NONE', })
  hl(0, "Boolean", { fg = c.base2, bg = 'NONE', })
  hl(0, "Float", { fg = c.fade1, bg = 'NONE', })
  hl(0, "Identifier", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Function", { fg = c.fade3, bg = 'NONE', })
  hl(0, "Operator", { fg = c.fg2, bg = 'NONE', })
  hl(0, "Type", { fg = c.fade1, bg = 'NONE', })
  hl(0, "StorageClass", { fg = c.base2, bg = 'NONE', })
  hl(0, "Structure", { fg = c.base2, bg = 'NONE', })
  hl(0, "Typedef", { fg = c.base2, bg = 'NONE', })
  hl(0, "Keyword", { fg = c.base2, bg = 'NONE', })
  hl(0, "Statement", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Conditional", { fg = c.base2, bg = 'NONE', })
  hl(0, "Repeat", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Label", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Exception", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Include", { fg = c.fade5, bg = 'NONE', })
  hl(0, "PreProc", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Define", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Macro", { fg = c.fade5, bg = 'NONE', })
  hl(0, "PreCondit", { fg = c.fade5, bg = 'NONE', })
  hl(0, "Special", { fg = c.base4, bg = 'NONE', })
  hl(0, "SpecialChar", { fg = c.bright2, bg = 'NONE', })
  hl(0, "Tag", { fg = c.base2, bg = 'NONE', })
  hl(0, "Debug", { fg = c.base5, bg = 'NONE', })
  hl(0, "Delimiter", { fg = c.dark2, bg = 'NONE', })
  hl(0, "SpecialComment", { fg = c.dark2, bg = 'NONE', })
  hl(0, "Underdark2d", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "Bold", { fg = 'NONE', bg = 'NONE', bold=true, })
  hl(0, "Italic", { fg = 'NONE', bg = 'NONE', italic=true, })
  hl(0, "Ignore", { fg = c.fade1, bg = c.bg4, bold=true, })
  hl(0, "Todo", { fg = c.bright3, bg = c.bg4, bold=true, })
  hl(0, "Error", { fg = c.base5, bg = c.bg4, bold=true, })
  hl(0, "TabLine", { fg = c.fade3, bg = c.dark2, })
  hl(0, "TabLineSel", { fg = c.bright2, bg = c.dark2, })
  hl(0, "TabLineFill", { fg = c.dark2, bg = c.dark2, })

  -- markdown
  hl(0, "markdownBlockquote", { fg = c.base1, bg = 'NONE', })
  hl(0, "markdownCode", { fg = c.base4, bg = 'NONE', })
  hl(0, "markdownCodeBlock", { fg = c.base4, bg = 'NONE', })
  hl(0, "markdownCodeDelimiter", { fg = c.base4, bg = 'NONE', })
  hl(0, "markdownH1", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownH2", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownH3", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownH4", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownH5", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownH6", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownHeadingDelimiter", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownHeadingRule", { fg = c.fg2, bg = 'NONE', bold=true, })
  hl(0, "markdownId", { fg = c.fade5, bg = 'NONE', })
  hl(0, "markdownIdDeclaration", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownIdDelimiter", { fg = c.fade3, bg = 'NONE', })
  hl(0, "markdownLinkDelimiter", { fg = c.fade3, bg = 'NONE', })
  hl(0, "markdownBold", { fg = c.base2, bg = 'NONE', bold=true, })
  hl(0, "markdownItalic", { fg = 'NONE', bg = 'NONE', italic=true, })
  hl(0, "markdownBoldItalic", { fg = c.fade3, bg = 'NONE', italic=true, bold=true, })
  hl(0, "markdownListMarker", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownOrdebase5ListMarker", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownRule", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownUrl", { fg = c.fade1, bg = 'NONE', underline=true, })
  hl(0, "markdownLinkText", { fg = c.base2, bg = 'NONE', })
  hl(0, "markdownFootnote", { fg = c.base4, bg = 'NONE', })
  hl(0, "markdownFootnoteDefinition", { fg = c.base4, bg = 'NONE', })
  hl(0, "markdownEscape", { fg = c.fade3, bg = 'NONE', })

  -- Git
  hl(0, "SignAdd", { fg = c.base1, bg = 'NONE', })
  hl(0, "SignChange", { fg = c.fade3, bg = 'NONE', })
  hl(0, "SignDelete", { fg = c.base5, bg = 'NONE', })
  hl(0, "GitSignsAdd", { fg = c.base1, bg = 'NONE', })
  hl(0, "GitSignsChange", { fg = c.fade3, bg = 'NONE', })
  hl(0, "GitSignsDelete", { fg = c.base5, bg = 'NONE', })

  -- Buffer
  hl(0, "BufferCurrent", { fg = c.fg2, bg = c.bg4, })
  hl(0, "BufferCurrentIndex", { fg = c.fg2, bg = c.bg4, })
  hl(0, "BufferCurrentMod", { fg = c.base3, bg = c.bg4, })
  hl(0, "BufferCurrentSign", { fg = c.fade1, bg = c.bg4, })
  hl(0, "BufferCurrentTarget", { fg = c.base5, bg = c.bg4, bold=true, })
  hl(0, "BufferVisible", { fg = c.fg2, bg = c.bg4, })
  hl(0, "BufferVisibleIndex", { fg = c.fg2, bg = c.bg4, })
  hl(0, "BufferVisibleMod", { fg = c.base3, bg = c.bg4, })
  hl(0, "BufferVisibleSign", { fg = c.dark2, bg = c.bg4, })
  hl(0, "BufferVisibleTarget", { fg = c.base5, bg = c.bg4, bold=true, })
  hl(0, "BufferInactive", { fg = c.dark2, bg = c.bg1, })
  hl(0, "BufferInactiveIndex", { fg = c.dark2, bg = c.bg1, })
  hl(0, "BufferInactiveMod", { fg = c.base3, bg = c.bg1, })
  hl(0, "BufferInactiveSign", { fg = c.dark2, bg = c.bg1, })
  hl(0, "BufferInactiveTarget", { fg = c.base5, bg = c.bg1, bold=true, })

  -- StatusLine
  hl(0, "StatusLine", { fg = c.dark2, bg = c.dark2, })
  hl(0, "StatusLineNC", { fg = c.dark2, bg = c.dark2, })
  hl(0, "StatusLineSeparator", { fg = c.dark2, bg = 'NONE', })
  hl(0, "StatusLineTerm", { fg = c.dark2, bg = 'NONE', })
  hl(0, "StatusLineTermNC", { fg = c.dark2, bg = 'NONE', })

  -- IndentBlankdark2
  hl(0, "IndentBlankdark2ContextChar", { fg = c.fade4, bg = 'NONE', })
  hl(0, "IndentBlankdark2ContextStart", { fg = 'NONE', bg = 'NONE', underline=true, })
  hl(0, "IndentBlankdark2Char", { fg = c.dark5, bg = 'NONE', })
  hl(0, "IndentBlankdark2SpaceChar", { fg = c.bright1, bg = 'NONE', })
  hl(0, "IndentBlankdark2SpaceCharBlankdark2", { fg = c.base3, bg = 'NONE', })

  -- Dashboard
  hl(0, "DashboardHeader", { fg = c.base2, bg = 'NONE', })
  hl(0, "DashboardCenter", { fg = c.fade5, bg = 'NONE', })
  hl(0, "DashboardFooter", { fg = c.fade1, bg = 'NONE', })

end

return theme